{%- set dests = [] %}
{%- set sqlite_dbs = [] %}
{%- set rw_paths = [] %}
{%- set home_paths = [] %}
{%- do dests.extend(borgmatic.config.get("repositories", [])) %}
{%- do sqlite_dbs.extend(borgmatic.config.get("sqlite_databases", [])) %}
{%- for config in borgmatic.config_d.values() %}
{%-   do dests.extend(config.get("repositories", [])) %}
{%-   do sqlite_dbs.extend(config.get("sqlite_databases", [])) %}
{%- endfor %}
{%- for dest in dests %}
{%-   if dest.path.startswith("/") %}
{%-     do rw_paths.append(dest) %}
{%-   elif dest.path.startswith("ssh://") %}
{%-     do home_paths.append("/root/.ssh") %}
{%-   endif %}
{%- endfor %}
{%- for db in sqlite_dbs %}
{#-   Even reading an SQLite DB requires write permissions to the directory (-wal/-shm) #}
{%-   do rw_paths.append(salt["file.dirname"](db.path)) %}
{%- endfor %}
{%- set borgmatic_bin = borgmatic.lookup.paths.bin %}
{%- if borgmatic.install != "venv" and not borgmatic.install_global %}
{%-   set borgmatic_bin = "/root/.local/bin/borgmatic" %}
{%- endif -%}
[Unit]
Description=borgmatic backup
Wants=network-online.target {{ borgmatic.service.wants | join(" ") }}
After=network-online.target
# Prevent borgmatic from running unless the machine is plugged into power. Remove this line if you
# want to allow borgmatic to run anytime.
ConditionACPower=true

[Service]
Type=oneshot

# Security settings for systemd running as root, optional but recommended to improve security. You
# can disable individual settings if they cause problems for your use case. For more details, see
# the systemd manual: https://www.freedesktop.org/software/systemd/man/systemd.exec.html
LockPersonality=true
# Certain borgmatic features like Healthchecks integration need MemoryDenyWriteExecute to be off.
# But you can try setting it to "yes" for improved security if you don't use those features.
MemoryDenyWriteExecute=no
NoNewPrivileges=yes
PrivateDevices=yes
PrivateTmp=yes
ProtectClock=yes
ProtectControlGroups=yes
ProtectHostname=yes
ProtectKernelLogs=yes
ProtectKernelModules=yes
ProtectKernelTunables=yes
RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6 AF_NETLINK
RestrictNamespaces=yes
RestrictRealtime=yes
RestrictSUIDSGID=yes
SystemCallArchitectures=native
SystemCallFilter=@system-service
SystemCallErrorNumber=EPERM
# To restrict write access further, change "ProtectSystem" to "strict" and uncomment
# "ReadWritePaths", "ReadOnlyPaths", "ProtectHome", and "BindPaths". Then add any local repository
# paths to the list of "ReadWritePaths" and local backup source paths to "ReadOnlyPaths". This
# leaves most of the filesystem read-only to borgmatic.
ProtectSystem=strict
{%- if rw_paths %}
ReadWritePaths= {{- "-" ~ " -".join(rw_paths | unique) }}
{%- endif %}
# This will mount a tmpfs on top of /root and pass through needed paths
ProtectHome=tmpfs
BindPaths=-/root/.cache/borg -/root/.cache/borg -/root/.borgmatic {{- " -" ~ " -".join(home_paths | unique) }}

# May interfere with running external programs within borgmatic hooks.
CapabilityBoundingSet=CAP_DAC_READ_SEARCH CAP_NET_RAW {%- if sqlite_dbs %} CAP_DAC_OVERRIDE{%- endif %}

# Lower CPU and I/O priority.
Nice=19
CPUSchedulingPolicy=batch
IOSchedulingClass=best-effort
IOSchedulingPriority=7
IOWeight=100

Restart=no
# Prevent rate limiting of borgmatic log events. If you are using an older version of systemd that
# doesn't support this (pre-240 or so), you may have to remove this option.
LogRateLimitIntervalSec=0

# Delay start to prevent backups running during boot. Note that systemd-inhibit requires dbus and
# dbus-user-session to be installed.
ExecStartPre=sleep 1m
{%- for cmd in borgmatic.service.exec_start_pre %}
ExecStartPre={{ cmd }}
{%- endfor %}
ExecStart=systemd-inhibit --who="borgmatic" --why="Prevent interrupting scheduled backup" \
    {{ borgmatic_bin }} --verbosity -1 --syslog-verbosity 1
{%- for cmd in borgmatic.service.exec_stop_post %}
ExecStopPost={{ cmd }}
{%- endfor %}
